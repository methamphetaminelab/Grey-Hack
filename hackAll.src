if params.len != 1 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address]</b>")

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then metaxploit = include_lib(current_path + "/metaxploit.so")
if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder")
print("Success: metaxploit loaded!")

address = params[0]
metaLibs = ["init.so", "net.so", "kernel_module.so", "aptclient.so", "kernel_router.so"]

for meta in metaLibs
	print(meta)
	metaLib = metaxploit.load("/lib/"+meta)
	memories = metaxploit.scan(metaLib)
	for memory in memories
		print("["+memory+"]")
		vulnerabilities = metaxploit.scan_address(metaLib, memory).split("Unsafe check: ")
		for vulnerability in vulnerabilities
			exploit = vulnerability[vulnerability.indexOf("<b>") + 3: vulnerability.indexOf("</b>")]
			if exploit and exploit != vulnerability then
				print(exploit)
				result = metaLib.overflow(memory, exploit, address)
				if result then 
					print("---SUCCESS---")
					print("lib: "+meta)
					print("memory: "+"["+memory+"]")
					print("exploit: "+exploit)
					exit("---SUCCESS---")
				end if
			end if
		end for
	end for
end for